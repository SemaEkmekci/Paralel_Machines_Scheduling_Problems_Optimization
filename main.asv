% Makinelerin işleri yapma süreleri
p = [
    1 87 28 32 38 9;
    4 21 68 17 43 48
];

% Makinelerin setup süreleri
s = {
    [0 1 8 1 3 9; 4 0 7 3 7 8; 7 3 0 2 3 5; 3 8 3 0 5 2; 8 3 7 9 0 5; 8 8 1 2 2 0]
    [0 5 1 6 1 7; 6 0 7 7 6 2; 7 6 0 9 6 9; 3 7 3 0 1 7; 5 8 5 6 0 9; 7 4 1 7 9 0]
};

% Çaprazlama olasılığı ve çaprazlama noktası için parametreler 
pcross = 0.9; 
d = 6; % İş sayısı veya kromozom boyutu
pmutation = 0.9; % Mutasyon olasılığı
as = 1;
num_jobs = 6;
num_machines = 2;
p_size = 10;
% Genetik algoritmayı çalıştır
    % Popülasyonu oluşturun
    population = initializePopulation(as, num_jobs, num_machines, p_size);
    
    % Amaç fonksiyon değerlerini hesapla
    objectiveValues = objective_function(population, s, p, p_size);
[population] = ga(1, 6, 2, 10, s, p, pcross, d, pmutation);
ga(ns_objectiveValues, num_machines, p_size, s, p, pcross, d, pmutation)

for i = 2
    [population] = ga(1, 6, 2, 10, s, p, pcross, d, pmutation);
end
% İlk oluşturulan popülasyonu göster
fprintf("İlk oluşturulan popülasyon:\n");
for i = 1:10
    fprintf("%d. kromozom: \n", i);
    disp(population{i});
    fprintf("Bu kromozomun amaç fonksiyonu değeri = %f\n", objectiveValues(i));
    fprintf("----------------------------------------------------\n");
end

fprintf("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");

% Doğal seçilim sonrası popülasyonu göster
fprintf("Doğal seçilim sonrası popülasyon:\n");
for i = 1:10
    fprintf("%d. doğal seçilimden sonraki kromozom: \n", i);
    disp(arapop{i});
    fprintf("Bu kromozomun amaç fonksiyonu değeri = %f\n", arapopObjectiveValues(i));
    fprintf("----------------------------------------------------\n");
end

fprintf("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");

% Çaprazlama sonrası popülasyonu göster
fprintf("Çaprazlama sonrası popülasyon:\n");
for i = 1:10
    fprintf("%d. çaprazlama sonrası kromozom: \n", i);
    disp(finalPopulation{i});
    if crossoverInfo{i, 1} ~= crossoverInfo{i, 2}
        fprintf("%d. ve %d. kromozom %d. değerden itibaren çaprazlanarak oluştu.\n", crossoverInfo{i, 1}, crossoverInfo{i, 2}, crossoverInfo{i, 3});
    else
        fprintf("Bu kromozomda çaprazlama gerçekleşmedi.\n");
    end
    fprintf("Bu kromozomun amaç fonksiyonu değeri = %f\n", finalObjectiveValues(i));
    fprintf("----------------------------------------------------\n");
end

fprintf("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n");

% Mutasyon sonrası popülasyonu göster 
                                                                            
fprintf("Mutasyon sonrası popülasyon:\n");
for i = 1:10
    fprintf("%d. mutasyon sonrası kromozom: \n", i);
    disp(mutatedPopulation{i});
    fprintf("Bu kromozomun amaç fonksiyonu değeri = %f\n", mutatedObjectiveValues(i));
    fprintf("----------------------------------------------------\n");
end
